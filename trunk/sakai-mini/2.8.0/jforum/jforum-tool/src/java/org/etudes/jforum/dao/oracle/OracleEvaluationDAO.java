/********************************************************************************** 
 * $URL: https://source.sakaiproject.org/contrib/etudes/sakai-jforum/tags/2.8.1/jforum-tool/src/java/org/etudes/jforum/dao/oracle/OracleEvaluationDAO.java $ 
 * $Id: OracleEvaluationDAO.java 66956 2010-03-31 22:25:00Z murthy@etudes.org $ 
 *********************************************************************************** 
 * 
 * Copyright (c) 2008 Etudes, Inc. 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 * 
 **********************************************************************************/
package org.etudes.jforum.dao.oracle;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.sql.Types;

import org.etudes.jforum.JForum;
import org.etudes.jforum.entities.Evaluation;
import org.etudes.jforum.util.preferences.SystemGlobals;


/**
 * @author murthyt
 */
public class OracleEvaluationDAO extends org.etudes.jforum.dao.generic.GenericEvaluationDAO {

	@Override
	public int addNew(Evaluation evaluation) throws Exception
	{
		PreparedStatement p = this.getStatementForAutoKeys("EvaluationModel.addNew");
		p.setInt(1, evaluation.getGradeId());
		p.setInt(2, evaluation.getUserId());
		p.setString(3, evaluation.getSakaiUserId());
		if (evaluation.getScore() == null)
			p.setNull(4, Types.FLOAT);
		else
			p.setFloat(4, evaluation.getScore());
		p.setInt(5, evaluation.getEvaluatedBy());
		p.setTimestamp(6, new Timestamp(System.currentTimeMillis()));
		p.setBoolean(7, evaluation.isReleased());

		this.setAutoGeneratedKeysQuery(SystemGlobals.getSql("EvaluationModel.lastGeneratedEvalId"));
		int evaluationId = this.executeAutoKeysQuery(p);

		p.close();
		
		//Save evaluation comments
		OracleUtils.writeClobUTF16BinaryStream(SystemGlobals.getSql("EvaluationModel.addComments"), evaluationId, 
																			evaluation.getComments());

		return evaluationId;
	}
	
	@Override
	public void update(Evaluation evaluation) throws Exception
	{
		PreparedStatement p = JForum.getConnection().prepareStatement(SystemGlobals.getSql("EvaluationModel.update"));
		if (evaluation.getScore() == null)
			p.setNull(1, Types.FLOAT);
		else
			p.setFloat(1, evaluation.getScore());
		p.setInt(2, evaluation.getEvaluatedBy());
		p.setTimestamp(3, new Timestamp(System.currentTimeMillis()));
		p.setBoolean(4, evaluation.isReleased());
		p.setInt(5, evaluation.getId());

		p.executeUpdate();
		p.close();
		
		//Save evaluation comments
		OracleUtils.writeClobUTF16BinaryStream(SystemGlobals.getSql("EvaluationModel.addComments"), evaluation.getId(), 
																			evaluation.getComments());
	}
	
	@Override
	protected String getEvaluationCommentsFromResultSet(ResultSet rs) throws Exception
	{
		return OracleUtils.readClobUTF16BinaryStream(rs, "comments");
	}
}
